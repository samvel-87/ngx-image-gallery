{"version":3,"file":"fe-titans-ngx-image-gallery.mjs","sources":["../../../src/projects/ngx-image-gallery/src/lib/directives/click-outside.directive.ts","../../../src/projects/ngx-image-gallery/src/lib/directives/mousewheel.directive.ts","../../../src/projects/ngx-image-gallery/src/lib/components/ngx-image-gallery/ngx-image-gallery.component.ts","../../../src/projects/ngx-image-gallery/src/lib/components/ngx-image-gallery/ngx-image-gallery.component.html","../../../src/projects/ngx-image-gallery/src/lib/index.ts","../../../src/projects/ngx-image-gallery/src/public-api.ts","../../../src/projects/ngx-image-gallery/src/fe-titans-ngx-image-gallery.ts"],"sourcesContent":["import { Directive, ElementRef, EventEmitter, HostListener, Output } from '@angular/core';\n\n@Directive({\n  selector: '[clickOutside]'\n})\nexport class ClickOutsideDirective {\n  @Output() clickOutside: EventEmitter<any> = new EventEmitter();\n\n  constructor(private _elementRef: ElementRef) {\n  }\n\n  @HostListener('document:click', [ '$event', '$event.target' ])\n  public onClick($event, targetElement) {\n    const isClickedInside = this._elementRef.nativeElement.contains(targetElement);\n    if (!isClickedInside) {\n      this.clickOutside.emit($event);\n    }\n  }\n}\n","import { Directive, Output, HostListener, EventEmitter } from '@angular/core';\n\n@Directive({ selector: '[mouseWheel]' })\nexport class MouseWheelDirective {\n  @Output() mouseWheelUp = new EventEmitter();\n  @Output() mouseWheelDown = new EventEmitter();\n\n  @HostListener('mousewheel', ['$event']) onMouseWheelChrome(event: any) {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('DOMMouseScroll', ['$event']) onMouseWheelFirefox(event: any) {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('onmousewheel', ['$event']) onMouseWheelIE(event: any) {\n    this.mouseWheelFunc(event);\n  }\n\n  mouseWheelFunc(event: any) {\n    var event = window.event || event; // old IE support\n    var delta = Math.max(-1, Math.min(1, (event.wheelDelta || -event.detail)));\n    if(delta > 0) {\n        this.mouseWheelUp.emit(event);\n    } else if(delta < 0) {\n        this.mouseWheelDown.emit(event);\n    }\n    // for IE\n    event.returnValue = false;\n    // for Chrome and Firefox\n    if(event.preventDefault) {\n        event.preventDefault();\n    }\n  }\n}","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\n\nimport { assign, debounce } from 'lodash';\n\nimport { GALLERY_CONF, GALLERY_IMAGE } from '../../ngx-image-gallery.conf';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\n\n// default gallery configuration\nconst DEFAULT_CONF: GALLERY_CONF = {\n  imageBorderRadius: '3px',\n  imageOffset: '20px',\n  imagePointer: false,\n  showDeleteControl: false,\n  showCloseControl: true,\n  showExtUrlControl: true,\n  showImageTitle: true,\n  showThumbnails: true,\n  closeOnEsc: true,\n  reactToKeyboard: true,\n  reactToMouseWheel: true,\n  reactToRightClick: false,\n  thumbnailSize: 30,\n  backdropColor: 'rgba(13,13,14,0.85)',\n  inline: false,\n  showArrows: true\n};\n\n@Component({\n  selector: 'ngx-image-gallery',\n  templateUrl: './ngx-image-gallery.component.html',\n  styleUrls: [ './ngx-image-gallery.component.scss' ],\n  standalone: true,\n  imports: [\n    CommonModule\n  ]\n})\nexport class NgxImageGalleryComponent implements OnInit, OnChanges {\n\n  // gallery opened memory\n  @HostBinding('class.active') opened: boolean = false;\n\n  // gallery configuration\n  @Input() conf: GALLERY_CONF = {};\n\n  // gallery images\n  @Input() images: GALLERY_IMAGE[] = [];\n\n  // event emmiters\n  @Output() onOpen = new EventEmitter();\n  @Output() onClose = new EventEmitter();\n  @Output() onDelete = new EventEmitter();\n  @Output() onImageChange = new EventEmitter();\n  @Output() onImageClicked = new EventEmitter();\n  @Output() onError = new EventEmitter();\n\n  // thumbnails container\n  @ViewChild('thumbnails') thumbnailsElem: ElementRef;\n\n  /***************************************************/\n\n  // loading animation memory\n  loading: boolean = false;\n\n  // current active image index\n  activeImageIndex: number = null;\n\n  // thumbnail margin and scroll position\n  thumbnailMargin: string = '0px 8px';\n  thumbnailsScrollerLeftMargin: string = '0px';\n\n  // active image\n  get activeImage(): GALLERY_IMAGE {\n    return this.images[this.activeImageIndex];\n  }\n\n  // if gallery is on : first image\n  get onFirstImage(): boolean {\n    return this.activeImageIndex == 0;\n  }\n\n  // if gallery is on : last image\n  get onLastImage(): boolean {\n    return this.activeImageIndex == (this.images.length - 1);\n  }\n\n  // get thumbnails viewport rendering parameters\n  get thumbnailsRenderParams(): {\n    thumbnailsInView: number,\n    newThumbnailMargin: number,\n    newThumbnailSize: number,\n    thumbnailsScrollerLeftMargin: any\n  } {\n    let thumbnailsContainerWidth = this.thumbnailsElem.nativeElement.offsetWidth;\n\n    let thumbnailMargin = 16;\n    let thumbnailSize = thumbnailMargin + this.conf.thumbnailSize;\n    let thumbnailsInView = Math.floor(thumbnailsContainerWidth / thumbnailSize);\n    let extraSpaceInThumbnailsContainer = thumbnailsContainerWidth - (thumbnailsInView * thumbnailSize);\n    let extraMargin = extraSpaceInThumbnailsContainer / thumbnailsInView;\n\n    let newThumbnailMargin = thumbnailMargin + extraMargin;\n    let newThumbnailSize = newThumbnailMargin + this.conf.thumbnailSize;\n\n    let relativePositionOfActiveImageThumbnailToScroller = thumbnailsInView - (thumbnailsInView - this.activeImageIndex);\n    let thumbnailsScrollerLeftMargin: any;\n\n    if (relativePositionOfActiveImageThumbnailToScroller > thumbnailsInView - 2) {\n      var outThumbnails = ((this.activeImageIndex + 1) - thumbnailsInView) + 1;\n\n      if (this.activeImageIndex != (this.images.length - 1)) {\n        thumbnailsScrollerLeftMargin = '-' + (newThumbnailSize * outThumbnails) + 'px';\n      } else {\n        thumbnailsScrollerLeftMargin = '-' + (newThumbnailSize * (outThumbnails - 1)) + 'px';\n      }\n    } else {\n      thumbnailsScrollerLeftMargin = '0px';\n    }\n\n    return {\n      thumbnailsInView,\n      newThumbnailMargin,\n      newThumbnailSize,\n      thumbnailsScrollerLeftMargin\n    };\n  }\n\n  // set gallery configuration\n  private setGalleryConf(conf: GALLERY_CONF) {\n    this.conf = assign(DEFAULT_CONF, conf);\n  }\n\n  // load image and return promise\n  private loadImage(index: number): Promise<any> {\n    const galleryImage: GALLERY_IMAGE = this.images[index];\n\n    // check if image is cached\n    if (galleryImage._cached) {\n      return Promise.resolve(index);\n    } else {\n      return new Promise((resolve, reject) => {\n        this.loading = true;\n\n        let image = new Image();\n        image.src = galleryImage.url;\n\n        image.onload = () => {\n          this.loading = false;\n          galleryImage._cached = true;\n          resolve(index);\n        };\n\n        image.onerror = (error) => {\n          this.loading = false;\n          reject(error);\n        };\n      });\n    }\n  }\n\n  // activate image (set active image)\n  private activateImage(imageIndex: number) {\n    // prevent loading if already loading\n    if (this.loading) return false;\n\n    // emit event\n    this.onImageChange.emit(imageIndex);\n\n    this.loadImage(imageIndex)\n      .then(_imageIndex => {\n        this.activeImageIndex = _imageIndex;\n        // Trigger change detection manually to support ChangeDetectionStrategy.OnPush\n        this.cdRef.detectChanges();\n\n        // scroll thumbnails\n        setTimeout(() => {\n          this.fitThumbnails();\n          setTimeout(() => this.scrollThumbnails(), 300);\n        });\n      })\n      .catch(error => {\n        console.warn(error)\n        this.onError.next(error);\n      });\n  }\n\n  // adjust thumbnail margin to perfectly fit viewport\n  private fitThumbnails = debounce(() => {\n    // if thumbnails not visible, return false\n    if (this.conf.showThumbnails == false) return false;\n\n    let thumbnailParams = this.thumbnailsRenderParams;\n    this.thumbnailMargin = '0 ' + (thumbnailParams.newThumbnailMargin / 2) + 'px';\n  }, 300);\n\n  // scroll thumbnails to perfectly position active image thumbnail in viewport\n  private scrollThumbnails() {\n    // if thumbnails not visible, return false\n    if (this.conf.showThumbnails == false) return false;\n\n    let thumbnailParams = this.thumbnailsRenderParams;\n    this.thumbnailsScrollerLeftMargin = thumbnailParams.thumbnailsScrollerLeftMargin;\n  }\n\n  // debounced prev\n  private debouncedPrev = debounce(() => this.prev(), 100, { 'leading': true, 'trailing': false });\n\n  // debounced next\n  private debouncedNext = debounce(() => this.next(), 100, { 'leading': true, 'trailing': false });\n\n  /***************************************************/\n\n  constructor(\n    public sanitizer: DomSanitizer,\n    private galleryElem: ElementRef,\n    private renderer: Renderer2,\n    private cdRef: ChangeDetectorRef\n  ) {\n  }\n\n  ngOnInit() {\n    // create final gallery configuration\n    this.setGalleryConf(this.conf);\n\n    // apply backdrop color\n    this.renderer.setStyle(this.galleryElem.nativeElement, 'background-color', this.conf.backdropColor);\n\n    // gallery inline class and auto open\n    if (this.conf.inline) {\n      this.renderer.addClass(this.galleryElem.nativeElement, 'inline');\n      this.open(0);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // when gallery configuration changes\n    if (changes.conf && changes.conf.firstChange == false) {\n      this.setGalleryConf(changes.conf.currentValue);\n\n      // apply backdrop color\n      this.renderer.setStyle(this.galleryElem.nativeElement, 'background-color', this.conf.backdropColor);\n\n      // gallery inline class and auto open\n      if ((changes.conf.previousValue.inline != true) && this.conf.inline) {\n        this.renderer.addClass(this.galleryElem.nativeElement, 'inline');\n        this.open(0);\n      }\n    }\n\n    // when gallery images changes\n    if (changes.images && changes.images.firstChange == false) {\n      this.images = changes.images.currentValue;\n\n      if (this.images.length) {\n        this.activateImage(0);\n      }\n    }\n\n  }\n\n  // keyboard event\n  @HostListener('window:keydown', [ '$event' ])\n  public onKeyboardInput(event: KeyboardEvent) {\n    if (this.conf.reactToKeyboard && this.opened && !this.loading) {\n      if (event.key == 'ArrowRight') {\n        this.next();\n      } else if (event.key == 'ArrowLeft') {\n        this.prev();\n      } else if ((event.key == 'Escape' || event.key == 'Esc') && this.conf.closeOnEsc) {\n        this.close();\n      }\n    }\n  }\n\n  // window resize event\n  @HostListener('window:resize', [ '$event' ])\n  public onWindowResize(event: Event) {\n    if (this.opened && !this.loading) {\n      this.fitThumbnails();\n      setTimeout(() => this.scrollThumbnails(), 300);\n    }\n  }\n\n  /***************************************************/\n\n  // open gallery\n  open(index: number = 0) {\n    if (this.images.length) {\n      this.opened = true;\n\n      // emit event\n      this.onOpen.emit(index);\n\n      // activate image at given index\n      this.activateImage(index);\n    } else {\n      console.warn('No images provided to ngx-image-gallery!');\n    }\n  }\n\n  // close gallery\n  close() {\n    this.opened = false;\n    this.activeImageIndex = 0;\n\n    // emit event\n    this.onClose.emit();\n  }\n\n  // change prev image\n  prev() {\n    if (this.onFirstImage == false) {\n      this.activateImage(this.activeImageIndex - 1);\n    }\n  }\n\n  // change next image\n  next() {\n    if (this.onLastImage == false) {\n      this.activateImage(this.activeImageIndex + 1);\n    }\n  }\n\n  // set image (activate)\n  setActiveImage(index: number) {\n    this.activateImage(index);\n  }\n\n  // delete image\n  deleteImage(index: number) {\n    this.onDelete.emit(index);\n  }\n\n  // mouse wheel up (prev image)\n  mouseWheelUp() {\n    if (this.conf.reactToMouseWheel) {\n      this.debouncedNext();\n    }\n  }\n\n  // mouse wheel down (next image)\n  mouseWheelDown() {\n    if (this.conf.reactToMouseWheel) {\n      this.debouncedPrev();\n    }\n  }\n\n  // click on image\n  clickOnImage(index: number) {\n    this.onImageClicked.emit(index);\n  }\n\n  // right click on image\n  rightClickOnImage(event: Event) {\n    event.stopPropagation();\n    return this.conf.reactToRightClick;\n  }\n\n}\n","<!-- images and image information container -->\n<div class=\"galleria\" mouseWheel (mouseWheelDown)=\"mouseWheelDown()\" (mouseWheelUp)=\"mouseWheelUp()\"\n     (contextmenu)=\"rightClickOnImage($event)\">\n    <!-- images -->\n    <div class=\"images-container\" (swiperight)=\"prev()\" (swipeleft)=\"next()\">\n        <!-- images array -->\n        <div class=\"image\" *ngFor=\"let image of images; let i = index;\"\n             [class.active]=\"!loading && (i == activeImageIndex)\"\n             [ngStyle]=\"{top: conf.imageOffset, bottom: conf.imageOffset}\">\n            <img *ngIf=\"i == activeImageIndex\" [src]=\"sanitizer.bypassSecurityTrustUrl(image.url)\" [alt]=\"image.altText || ''\"\n                 [style.cursor]=\"conf.imagePointer?  'pointer':'default'\"\n                 [style.borderRadius]=\"conf.imageBorderRadius\" (click)=\"clickOnImage(activeImageIndex)\"/>\n        </div>\n\n        <!-- loading animation -->\n        <div class=\"loading-animation\" *ngIf=\"(images.length == 0) || loading\">\n            <svg  version=\"1.1\" id=\"L3\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" enable-background=\"new 0 0 0 0\" xml:space=\"preserve\">\n        <circle fill=\"none\" stroke=\"#fff\" stroke-width=\"4\" cx=\"50\" cy=\"50\" r=\"44\" style=\"opacity:0.5;\"/>\n        <circle fill=\"#4caf50\" stroke=\"#eee\" stroke-width=\"3\" cx=\"8\" cy=\"54\" r=\"6\">\n          <animateTransform\n          attributeName=\"transform\"\n          dur=\"2s\"\n          type=\"rotate\"\n          from=\"0 50 48\"\n          to=\"360 50 52\"\n          repeatCount=\"indefinite\" />\n\n          <animate \n          attributeName=\"fill\" \n          begin=\"1s\" \n          dur=\"16s\" \n          values=\"#4caf50; #cddc39; #ff9800; #f44336; #e91e63; #ff5722; #ffeb3b; #4caf50\"\n          repeatCount=\"indefinite\" /> \n        </circle>\n      </svg>\n        </div>\n    </div>\n\n    <!-- info and thumbnails -->\n    <div class=\"info-container\">\n        <div class=\"title\"\n             *ngIf=\"conf.showImageTitle && !loading && activeImage && activeImage.title\"\n             [style.paddingBottom]=\"conf.showThumbnails ? '0px' : '30px'\"\n             [class.dark]=\"conf.inline\"\n        >{{ activeImage.title }}\n        </div>\n\n        <div #thumbnails class=\"thumbnails\" *ngIf=\"conf.showThumbnails\">\n            <div class=\"thumbnails-scroller\" [style.marginLeft]=\"thumbnailsScrollerLeftMargin\">\n                <div class=\"thumbnail\"\n                     *ngFor=\"let image of images; let i = index;\"\n                     [class.active]=\"i == activeImageIndex\"\n\n                     [style.backgroundImage]=\"sanitizer.bypassSecurityTrustStyle('url(' + (image.thumbnailUrl || image.url) + ')')\"\n\n                     [style.margin]=\"thumbnailMargin\"\n                     [style.width]=\"conf.thumbnailSize + 'px'\"\n                     [style.height]=\"conf.thumbnailSize + 'px'\"\n                     (click)=\"setActiveImage(i)\">\n                    <div class=\"feedback\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<!-- gallery controls -->\n<div class=\"control arrow left\" *ngIf=\"conf.showArrows && (images.length > 1) && !loading\" [class.dark]=\"conf.inline\"\n     [class.disabled]=\"onFirstImage\" (click)=\"prev()\"></div>\n<div class=\"control arrow right\" *ngIf=\"conf.showArrows && (images.length > 1) && !loading\" [class.dark]=\"conf.inline\"\n     [class.disabled]=\"onLastImage\" (click)=\"next()\"></div>\n\n<div class=\"control right-top\">\n    <a class=\"ext-url\" [class.dark]=\"conf.inline\"\n       *ngIf=\"conf.showExtUrlControl && activeImage && activeImage.extUrl && !loading\" [href]=\"activeImage.extUrl\"\n       [target]=\"activeImage.extUrlTarget || '_blank'\">\n        <div class=\"feedback\"></div>\n    </a>\n    <div class=\"close\" [class.dark]=\"conf.inline\" *ngIf=\"conf.showCloseControl\" (click)=\"close()\">\n        <div class=\"feedback\"></div>\n    </div>\n</div>\n\n<div class=\"control left-top\">\n    <div class=\"delete-img\" [class.dark]=\"conf.inline\" *ngIf=\"conf.showDeleteControl && !loading\"\n         (click)=\"deleteImage(activeImageIndex)\">\n        <div class=\"feedback\"></div>\n    </div>\n</div>\n","import {NgModule} from '@angular/core';\nimport {ClickOutsideDirective} from './directives/click-outside.directive';\nimport {MouseWheelDirective} from './directives/mousewheel.directive';\n\nexport * from './components/ngx-image-gallery/ngx-image-gallery.component';\nexport * from './directives/click-outside.directive';\nexport * from './directives/mousewheel.directive';\nexport * from './ngx-image-gallery.conf';\n\n@NgModule({\n    declarations: [\n        MouseWheelDirective,\n        ClickOutsideDirective\n    ],\n    exports: [\n        MouseWheelDirective,\n        ClickOutsideDirective\n    ]\n})\nexport class NgxImageGalleryModule {\n}\n","/*\n * Public API Surface of ngx-image-gallery\n */\n\nexport * from './lib/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}