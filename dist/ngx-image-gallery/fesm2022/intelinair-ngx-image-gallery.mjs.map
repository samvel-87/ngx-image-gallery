{"version":3,"file":"intelinair-ngx-image-gallery.mjs","sources":["../../../src/projects/ngx-image-gallery/src/lib/directives/mousewheel.directive.ts","../../../src/projects/ngx-image-gallery/src/lib/components/ngx-image-gallery/ngx-image-gallery.component.html","../../../src/projects/ngx-image-gallery/src/lib/components/ngx-image-gallery/ngx-image-gallery.component.ts","../../../src/projects/ngx-image-gallery/src/lib/directives/click-outside.directive.ts","../../../src/projects/ngx-image-gallery/src/lib/index.ts","../../../src/projects/ngx-image-gallery/src/public-api.ts","../../../src/projects/ngx-image-gallery/src/intelinair-ngx-image-gallery.ts"],"sourcesContent":["import { Directive, Output, HostListener, EventEmitter } from '@angular/core';\n\n@Directive({ selector: '[mouseWheel]' })\nexport class MouseWheelDirective {\n  @Output() mouseWheelUp = new EventEmitter();\n  @Output() mouseWheelDown = new EventEmitter();\n\n  @HostListener('mousewheel', ['$event']) onMouseWheelChrome(event: any) {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('DOMMouseScroll', ['$event']) onMouseWheelFirefox(event: any) {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('onmousewheel', ['$event']) onMouseWheelIE(event: any) {\n    this.mouseWheelFunc(event);\n  }\n\n  mouseWheelFunc(event: any) {\n    var event = window.event || event; // old IE support\n    var delta = Math.max(-1, Math.min(1, (event.wheelDelta || -event.detail)));\n    if(delta > 0) {\n        this.mouseWheelUp.emit(event);\n    } else if(delta < 0) {\n        this.mouseWheelDown.emit(event);\n    }\n    // for IE\n    event.returnValue = false;\n    // for Chrome and Firefox\n    if(event.preventDefault) {\n        event.preventDefault();\n    }\n  }\n}","<!-- images and image information container -->\n<div class=\"galleria\" mouseWheel (mouseWheelDown)=\"mouseWheelDown()\" (mouseWheelUp)=\"mouseWheelUp()\"\n     (contextmenu)=\"rightClickOnImage($event)\">\n    <!-- images -->\n    <div class=\"images-container\" (swiperight)=\"prev()\" (swipeleft)=\"next()\">\n        <!-- images array -->\n        <div class=\"image\" *ngFor=\"let image of images; let i = index;\"\n             [class.active]=\"!loading && (i == activeImageIndex)\"\n             [ngStyle]=\"{top: conf.imageOffset, bottom: conf.imageOffset}\">\n            <img *ngIf=\"i == activeImageIndex\" [src]=\"sanitizer.bypassSecurityTrustUrl(image.url)\" [alt]=\"image.altText || ''\"\n                 [style.cursor]=\"conf.imagePointer?  'pointer':'default'\"\n                 [style.borderRadius]=\"conf.imageBorderRadius\" (click)=\"clickOnImage(activeImageIndex)\"/>\n        </div>\n\n        <!-- loading animation -->\n        <div class=\"loading-animation\" *ngIf=\"(images.length == 0) || loading\">\n            <svg  version=\"1.1\" id=\"L3\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" enable-background=\"new 0 0 0 0\" xml:space=\"preserve\">\n        <circle fill=\"none\" stroke=\"#fff\" stroke-width=\"4\" cx=\"50\" cy=\"50\" r=\"44\" style=\"opacity:0.5;\"/>\n        <circle fill=\"#4caf50\" stroke=\"#eee\" stroke-width=\"3\" cx=\"8\" cy=\"54\" r=\"6\">\n          <animateTransform\n          attributeName=\"transform\"\n          dur=\"2s\"\n          type=\"rotate\"\n          from=\"0 50 48\"\n          to=\"360 50 52\"\n          repeatCount=\"indefinite\" />\n\n          <animate \n          attributeName=\"fill\" \n          begin=\"1s\" \n          dur=\"16s\" \n          values=\"#4caf50; #cddc39; #ff9800; #f44336; #e91e63; #ff5722; #ffeb3b; #4caf50\"\n          repeatCount=\"indefinite\" /> \n        </circle>\n      </svg>\n        </div>\n    </div>\n\n    <!-- info and thumbnails -->\n    <div class=\"info-container\">\n        <div class=\"title\"\n             *ngIf=\"conf.showImageTitle && !loading && activeImage && activeImage.title\"\n             [style.paddingBottom]=\"conf.showThumbnails ? '0px' : '30px'\"\n             [class.dark]=\"conf.inline\"\n        >{{ activeImage.title }}\n        </div>\n\n        <div #thumbnails class=\"thumbnails\" *ngIf=\"conf.showThumbnails\">\n            <div class=\"thumbnails-scroller\" [style.marginLeft]=\"thumbnailsScrollerLeftMargin\">\n                <div class=\"thumbnail\"\n                     *ngFor=\"let image of images; let i = index;\"\n                     [class.active]=\"i == activeImageIndex\"\n\n                     [style.backgroundImage]=\"sanitizer.bypassSecurityTrustStyle('url(' + (image.thumbnailUrl || image.url) + ')')\"\n\n                     [style.margin]=\"thumbnailMargin\"\n                     [style.width]=\"conf.thumbnailSize + 'px'\"\n                     [style.height]=\"conf.thumbnailSize + 'px'\"\n                     (click)=\"setActiveImage(i)\">\n                    <div class=\"feedback\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<!-- gallery controls -->\n<div class=\"control arrow left\" *ngIf=\"conf.showArrows && (images.length > 1) && !loading\" [class.dark]=\"conf.inline\"\n     [class.disabled]=\"onFirstImage\" (click)=\"prev()\"></div>\n<div class=\"control arrow right\" *ngIf=\"conf.showArrows && (images.length > 1) && !loading\" [class.dark]=\"conf.inline\"\n     [class.disabled]=\"onLastImage\" (click)=\"next()\"></div>\n\n<div class=\"control right-top\">\n    <a class=\"ext-url\" [class.dark]=\"conf.inline\"\n       *ngIf=\"conf.showExtUrlControl && activeImage && activeImage.extUrl && !loading\" [href]=\"activeImage.extUrl\"\n       [target]=\"activeImage.extUrlTarget || '_blank'\">\n        <div class=\"feedback\"></div>\n    </a>\n    <div class=\"close\" [class.dark]=\"conf.inline\" *ngIf=\"conf.showCloseControl\" (click)=\"close()\">\n        <div class=\"feedback\"></div>\n    </div>\n</div>\n\n<div class=\"control left-top\">\n    <div class=\"delete-img\" [class.dark]=\"conf.inline\" *ngIf=\"conf.showDeleteControl && !loading\"\n         (click)=\"deleteImage(activeImageIndex)\">\n        <div class=\"feedback\"></div>\n    </div>\n</div>\n","import {\n    Component,\n    OnInit,\n    HostBinding,\n    Input,\n    HostListener,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport {assign, debounce} from 'lodash';\n\nimport {GALLERY_CONF, GALLERY_IMAGE} from '../../ngx-image-gallery.conf';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n// key codes to react\nconst KEY_CODES = {\n    37: 'LEFT',\n    39: 'RIGHT',\n    27: 'ESC'\n};\n\n// default gallery configuration\nconst DEFAULT_CONF: GALLERY_CONF = {\n    imageBorderRadius: '3px',\n    imageOffset: '20px',\n    imagePointer: false,\n    showDeleteControl: false,\n    showCloseControl: true,\n    showExtUrlControl: true,\n    showImageTitle: true,\n    showThumbnails: true,\n    closeOnEsc: true,\n    reactToKeyboard: true,\n    reactToMouseWheel: true,\n    reactToRightClick: false,\n    thumbnailSize: 30,\n    backdropColor: 'rgba(13,13,14,0.85)',\n    inline: false,\n    showArrows: true\n};\n\n@Component({\n    selector: 'ngx-image-gallery',\n    templateUrl: './ngx-image-gallery.component.html',\n    styleUrls: ['./ngx-image-gallery.component.scss']\n})\nexport class NgxImageGalleryComponent implements OnInit, OnChanges {\n\n    // gallery opened memory\n    @HostBinding('class.active') opened: boolean = false;\n\n    // gallery configuration\n    @Input() conf: GALLERY_CONF = {};\n\n    // gallery images\n    @Input() images: GALLERY_IMAGE[] = [];\n\n    // event emmiters\n    @Output() onOpen = new EventEmitter();\n    @Output() onClose = new EventEmitter();\n    @Output() onDelete = new EventEmitter();\n    @Output() onImageChange = new EventEmitter();\n    @Output() onImageClicked = new EventEmitter();\n    @Output() onError = new EventEmitter();\n\n    // thumbnails container\n    @ViewChild('thumbnails') thumbnailsElem: ElementRef;\n\n    /***************************************************/\n\n    // loading animation memory\n    loading: boolean = false;\n\n    // current active image index\n    activeImageIndex: number = null;\n\n    // thumbnail margin and scroll position\n    thumbnailMargin: string = '0px 8px';\n    thumbnailsScrollerLeftMargin: string = '0px';\n\n    // active image\n    get activeImage(): GALLERY_IMAGE {\n        return this.images[this.activeImageIndex];\n    }\n\n    // if gallery is on : first image\n    get onFirstImage(): boolean {\n        return this.activeImageIndex == 0;\n    }\n\n    // if gallery is on : last image\n    get onLastImage(): boolean {\n        return this.activeImageIndex == (this.images.length - 1);\n    }\n\n    // get thumbnails viewport rendering parameters\n    get thumbnailsRenderParams(): { thumbnailsInView: number, newThumbnailMargin: number, newThumbnailSize: number, thumbnailsScrollerLeftMargin: any } {\n        let thumbnailsContainerWidth = this.thumbnailsElem.nativeElement.offsetWidth;\n\n        let thumbnailMargin = 16;\n        let thumbnailSize = thumbnailMargin + this.conf.thumbnailSize;\n        let thumbnailsInView = Math.floor(thumbnailsContainerWidth / thumbnailSize);\n        let extraSpaceInThumbnailsContainer = thumbnailsContainerWidth - (thumbnailsInView * thumbnailSize);\n        let extraMargin = extraSpaceInThumbnailsContainer / thumbnailsInView;\n\n        let newThumbnailMargin = thumbnailMargin + extraMargin;\n        let newThumbnailSize = newThumbnailMargin + this.conf.thumbnailSize;\n\n        let relativePositionOfActiveImageThumbnailToScroller = thumbnailsInView - (thumbnailsInView - this.activeImageIndex);\n        let thumbnailsScrollerLeftMargin: any;\n\n        if (relativePositionOfActiveImageThumbnailToScroller > thumbnailsInView - 2) {\n            var outThumbnails = ((this.activeImageIndex + 1) - thumbnailsInView) + 1;\n\n            if (this.activeImageIndex != (this.images.length - 1)) {\n                thumbnailsScrollerLeftMargin = '-' + (newThumbnailSize * outThumbnails) + 'px';\n            }\n            else {\n                thumbnailsScrollerLeftMargin = '-' + (newThumbnailSize * (outThumbnails - 1)) + 'px';\n            }\n        } else {\n            thumbnailsScrollerLeftMargin = '0px';\n        }\n\n        return {\n            thumbnailsInView,\n            newThumbnailMargin,\n            newThumbnailSize,\n            thumbnailsScrollerLeftMargin\n        };\n    }\n\n    // set gallery configuration\n    private setGalleryConf(conf: GALLERY_CONF) {\n        this.conf = assign(DEFAULT_CONF, conf);\n    }\n\n    // load image and return promise\n    private loadImage(index: number): Promise<any> {\n        const galleryImage: GALLERY_IMAGE = this.images[index];\n\n        // check if image is cached\n        if (galleryImage._cached) {\n            return Promise.resolve(index);\n        }\n        else {\n            return new Promise((resolve, reject) => {\n                this.loading = true;\n\n                let image = new Image();\n                image.src = galleryImage.url;\n\n                image.onload = () => {\n                    this.loading = false;\n                    galleryImage._cached = true;\n                    resolve(index);\n                };\n\n                image.onerror = (error) => {\n                    this.loading = false;\n                    reject(error);\n                };\n            });\n        }\n    }\n\n    // activate image (set active image)\n    private activateImage(imageIndex: number) {\n        // prevent loading if already loading\n        if (this.loading) return false;\n\n        // emit event\n        this.onImageChange.emit(imageIndex);\n\n        this.loadImage(imageIndex)\n            .then(_imageIndex => {\n                this.activeImageIndex = _imageIndex;\n                // Trigger change detection manually to support ChangeDetectionStrategy.OnPush\n                this.cdRef.detectChanges();\n\n                // scroll thumbnails\n                setTimeout(() => {\n                    this.fitThumbnails();\n                    setTimeout(() => this.scrollThumbnails(), 300);\n                });\n            })\n            .catch(error => {\n                console.warn(error)\n                this.onError.next(error);\n            });\n    }\n\n    // adjust thumbnail margin to perfectly fit viewport\n    private fitThumbnails = debounce(() => {\n        // if thumbnails not visible, return false\n        if (this.conf.showThumbnails == false) return false;\n\n        let thumbnailParams = this.thumbnailsRenderParams;\n        this.thumbnailMargin = '0 ' + (thumbnailParams.newThumbnailMargin / 2) + 'px';\n    }, 300);\n\n    // scroll thumbnails to perfectly position active image thumbnail in viewport\n    private scrollThumbnails() {\n        // if thumbnails not visible, return false\n        if (this.conf.showThumbnails == false) return false;\n\n        let thumbnailParams = this.thumbnailsRenderParams;\n        this.thumbnailsScrollerLeftMargin = thumbnailParams.thumbnailsScrollerLeftMargin;\n    }\n\n    // debounced prev\n    private debouncedPrev = debounce(() => this.prev(), 100, {'leading': true, 'trailing': false});\n\n    // debounced next\n    private debouncedNext = debounce(() => this.next(), 100, {'leading': true, 'trailing': false});\n\n    /***************************************************/\n\n    constructor(\n        public sanitizer: DomSanitizer,\n        private galleryElem: ElementRef,\n        private renderer: Renderer2,\n        private cdRef: ChangeDetectorRef\n    ) {}\n\n    ngOnInit() {\n        // create final gallery configuration\n        this.setGalleryConf(this.conf);\n\n        // apply backdrop color\n        this.renderer.setStyle(this.galleryElem.nativeElement, 'background-color', this.conf.backdropColor);\n\n        // gallery inline class and auto open\n        if (this.conf.inline) {\n            this.renderer.addClass(this.galleryElem.nativeElement, 'inline');\n            this.open(0);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // when gallery configuration changes\n        if (changes.conf && changes.conf.firstChange == false) {\n            this.setGalleryConf(changes.conf.currentValue);\n\n            // apply backdrop color\n            this.renderer.setStyle(this.galleryElem.nativeElement, 'background-color', this.conf.backdropColor);\n\n            // gallery inline class and auto open\n            if ((changes.conf.previousValue.inline != true) && this.conf.inline) {\n                this.renderer.addClass(this.galleryElem.nativeElement, 'inline');\n                this.open(0);\n            }\n        }\n\n        // when gallery images changes\n        if (changes.images && changes.images.firstChange == false) {\n            this.images = changes.images.currentValue;\n\n            if (this.images.length) {\n                this.activateImage(0);\n            }\n        }\n\n    }\n\n    // keyboard event\n    @HostListener('window:keydown', ['$event'])\n    public onKeyboardInput(event: KeyboardEvent) {\n        if (this.conf.reactToKeyboard && this.opened && !this.loading) {\n            if (KEY_CODES[event.code] == 'RIGHT') {\n                this.next();\n            }\n            else if (KEY_CODES[event.code] == 'LEFT') {\n                this.prev();\n            }\n            else if ((KEY_CODES[event.code] == 'ESC') && this.conf.closeOnEsc) {\n                this.close();\n            }\n        }\n    }\n\n    // window resize event\n    @HostListener('window:resize', ['$event'])\n    public onWindowResize(event: Event) {\n        if (this.opened && !this.loading) {\n            this.fitThumbnails();\n            setTimeout(() => this.scrollThumbnails(), 300);\n        }\n    }\n\n    /***************************************************/\n\n    // open gallery\n    open(index: number = 0) {\n        if (this.images.length) {\n            this.opened = true;\n\n            // emit event\n            this.onOpen.emit(index);\n\n            // activate image at given index\n            this.activateImage(index);\n        }\n        else {\n            console.warn('No images provided to ngx-image-gallery!');\n        }\n    }\n\n    // close gallery\n    close() {\n        this.opened = false;\n        this.activeImageIndex = 0;\n\n        // emit event\n        this.onClose.emit();\n    }\n\n    // change prev image\n    prev() {\n        if (this.onFirstImage == false) {\n            this.activateImage(this.activeImageIndex - 1);\n        }\n    }\n\n    // change next image\n    next() {\n        if (this.onLastImage == false) {\n            this.activateImage(this.activeImageIndex + 1);\n        }\n    }\n\n    // set image (activate)\n    setActiveImage(index: number) {\n        this.activateImage(index);\n    }\n\n    // delete image\n    deleteImage(index: number) {\n        this.onDelete.emit(index);\n    }\n\n    // mouse wheel up (prev image)\n    mouseWheelUp() {\n        if (this.conf.reactToMouseWheel) {\n            this.debouncedNext();\n        }\n    }\n\n    // mouse wheel down (next image)\n    mouseWheelDown() {\n        if (this.conf.reactToMouseWheel) {\n            this.debouncedPrev();\n        }\n    }\n\n    // click on image\n    clickOnImage(index: number) {\n        this.onImageClicked.emit(index);\n    }\n\n    // right click on image\n    rightClickOnImage(event: Event) {\n        event.stopPropagation();\n        return this.conf.reactToRightClick;\n    }\n\n}\n","import { Directive, ElementRef, Output, EventEmitter, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[clickOutside]'\n})\nexport class ClickOutsideDirective {\n  @Output() clickOutside: EventEmitter<any> = new EventEmitter();\n\n  constructor(private _elementRef: ElementRef) {}\n\n  @HostListener('document:click', ['$event', '$event.target'])\n  public onClick($event, targetElement) {\n    const isClickedInside = this._elementRef.nativeElement.contains(targetElement);\n    if (!isClickedInside) {\n      this.clickOutside.emit($event);\n    }\n  }\n}","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgxImageGalleryComponent} from './components/ngx-image-gallery/ngx-image-gallery.component';\nimport {ClickOutsideDirective} from './directives/click-outside.directive';\nimport {MouseWheelDirective} from './directives/mousewheel.directive';\n\nexport * from './components/ngx-image-gallery/ngx-image-gallery.component';\nexport * from './directives/click-outside.directive';\nexport * from './directives/mousewheel.directive';\nexport * from './ngx-image-gallery.conf';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        NgxImageGalleryComponent,\n        MouseWheelDirective,\n        ClickOutsideDirective\n    ],\n    exports: [\n        NgxImageGalleryComponent,\n        MouseWheelDirective,\n        ClickOutsideDirective\n    ]\n})\nexport class NgxImageGalleryModule {\n}\n","/*\n * Public API Surface of ngx-image-gallery\n */\n\nexport * from './lib/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}